name: Deploy

on:
  pull_request:
    paths-ignore:
      - '**/*.md'
    branches:
      - main
    types: [closed]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: devtube-cluster
  GKE_ZONE: asia-southeast1

jobs:
  setup-build-publish-deploy:
    if: ${{ github.event.pull_request.merged }}
    name: Deploy
    runs-on: ubuntu-latest
    environment: staging
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Set up Google Cloud authentication
    - uses: 'google-github-actions/auth@v2'
      name: 'Authenticate to Google Cloud'
      with:
        project_id: ${{ secrets.GKE_PROJECT }}
        workload_identity_provider: projects/281987613876/locations/global/workloadIdentityPools/github/providers/my-github-repo-provider
        service_account: cicd-deployer@devtube-456704.iam.gserviceaccount.com

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
      name: Get GKE credentials
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    # Check for changes in k8s.yaml files and deploy the corresponding service dynamically
    - name: Check modified files and deploy
      run: |
        # Get the list of modified k8s.yaml files in the pull request
        changed_files=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.merge_commit_sha }})
        echo "Changed files:"
        echo "$changed_files"
        # Loop through each modified file
        no_deploy=true
        for file in $changed_files; do
          # Check if the file path matches the pattern "stg/{service}/k8s.yaml"
          if [[ $file == stg/*/k8s.yaml ]]; then
            # Extract the service name (e.g., api-gateway from stg/api-gateway/k8s.yaml)
            service_name=$(echo $file | cut -d '/' -f 2)
            echo "Detected change in service: $service_name"

            # Apply the Kubernetes configuration for the service
            kubectl apply -f $file

            # Rollout status for the specific service
            kubectl rollout status deployment/${service_name}-deployment
            no_deploy=false
          fi
        done

        if $no_deploy; then
          echo "No k8s.yaml changes detected. Nothing deployed."
        fi
